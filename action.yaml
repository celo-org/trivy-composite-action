name: Trivy

description: "Run a Trivy Scan and upload the results"
inputs:
  image-ref:
    description: "image to scan"
    required: false
    type: string
  scan-type:
    description: "type of scan"
    required: true
    type: string
  timeout:
    description: "how long to scan"
    default: 15m
    type: string
  vuln-type:
    description: "types of vulnerabilities to report"
    default: "os,library"
    type: string
  severity:
    description: "severity of issues to report"
    default: "UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL"
    type: string
  output-file:
    description: "base filename to export scan results" 
    default: "trivy-results"
    type: string

runs:
  using: "composite"
  steps:

    - name: Validate Inputs
      shell: bash
      run: |
        if [[ ${{ inputs.scan-type}} == "image" && ${{ inputs.image-ref == ''}} ]]; then
        {
          echo "::error::scan-type of image requires image-ref"
          exit(1)
        }
        fi

    - name: Check if GHAS is enabled
      uses: actions/github-script@v7
      id: ghas-enabled
      with:
        script: |
          const response = await github.rest.repos.get({
            owner: '${{ github.repository }}'.split("/")[0],
            repo: '${{ github.repository }}'.split("/")[1]
          });
          const private = response.data.private
          
          if (private) {
            const securityEnabled = response.data.security_and_analysis?.advanced_security?.status === 'enabled';
 
            if (!securityEnabled) {
              const message = 'GitHub Advanced Security is NOT enabled and repo is private. Can not upload report, check summary';
              core.warning(message);
              return false
            }
          }
          return true


    - name: Run Trivy vulnerability scanner
      id: scan
      uses: aquasecurity/trivy-action@master
      with:         
        scan-type: "${{ inputs.scan-type }}"
        image-ref: "${{ inputs.image-ref }}"
        timeout: "${{ inputs.timeout }}"
        vuln-type: "${{ inputs.vuln-type }}"
        severity: "${{ inputs.severity }}"
        format: "json"
        output: "trivy.json"

    - name: Convert output to Sarif for codescanning
      if: steps.ghas-enabled.output.result
      shell: bash
      run: trivy convert --format sarif --output "${{ inputs.output-file }}.sarif" trivy.json  
    
    - name: Upload Trivy scan results to GitHub Security tab
      if: steps.ghas-enabled.output.result
      id: upload
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: "${{ inputs.output-file }}.sarif"

    - name: Convert output to txt for github summary
      shell: bash
      run: trivy convert --format table  --output "${{ inputs.output-file }}.txt" trivy.json  


    - name: Publish Trivy Output to Summary
      shell: bash
      run: |
      if [[ -s trivy.txt ]]; then
      {
        echo "### Security Output"
        echo "<details><summary>Click to expand</summary>"
        echo ""
        echo '```Scan results'
        cat ${{ inputs.output-file }}.txt
        echo '```'
        echo "</details>"
      } >> $GITHUB_STEP_SUMMARY
    fi
 

